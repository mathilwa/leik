{"version":3,"sources":["landing-page/category-tag/category-tag-types.ts","landing-page/images/header-picture.svg","api/leik-api.ts","landing-page/category-tag/category-tag-theme.ts","landing-page/category-tag/CategoryTag.tsx","landing-page/LandingPage.tsx","index.tsx"],"names":["Category","fetchGames","a","axios","get","process","fetchedAuctionObject","data","themeEntries","Music","color","borderColor","Quiz","selectedEntries","backgroundColor","Tag","tag","selected","onClick","theme","getThemeForTag","selectedTheme","getSelectedColorForTag","className","style","LandingPage","useState","games","setGames","selectedCategories","setSelectedCategories","tags","LeikApi","fetchedGames","useEffect","fetchAllGames","gamesToShow","filter","game","includes","category","src","headerPicture","alt","map","CategoryTag","selectedCategory","title","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAAYA,E,gFCAG,G,MAAA,IAA0B,4C,iBCK5BC,EAAU,uCAAG,4BAAAC,EAAA,sEACaC,IAAMC,IAAN,UAHxBC,iCAGwB,MADb,cAChBC,EADgB,yBAGfA,EAAqBC,MAHN,2CAAH,sD,SFLXP,K,oBAAAA,E,aAAAA,M,oCGQNQ,GAAqD,mBACtDR,EAASS,MAAQ,CACdC,MAAO,UACPC,YAAa,YAHsC,cAKtDX,EAASY,KAAO,CACbF,MAAO,UACPC,YAAa,YAPsC,GAWrDE,GAAwD,mBACzDb,EAASS,MAAQ,CACdC,MAAO,OACPI,gBAAiB,UACjBH,YAAa,YAJyC,cAMzDX,EAASY,KAAO,CACbF,MAAO,OACPI,gBAAiB,UACjBH,YAAa,YATyC,G,OCW/CI,EAnBc,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACrCC,EDoBoB,SAACH,GAAD,OAAqCR,EAAaQ,GCpB9DI,CAAeJ,GACvBK,EDoB4B,SAACL,GAAD,OAAqCH,EAAgBG,GCpBjEM,CAAuBN,GAE7C,OACI,qBACIO,UAAU,MACVC,MAAK,2BACEL,GADF,IAEDL,gBAAiBG,EAAWI,EAAcP,gBAAkBK,EAAML,gBAClEJ,MAAOO,EAAWI,EAAcX,MAAQS,EAAMT,QAElDQ,QAASA,EAPb,SASKF,KCmCES,EApDe,WAAO,IAAD,EACNC,mBAAiB,IADX,mBACzBC,EADyB,KAClBC,EADkB,OAEoBF,mBAAqB,IAFzC,mBAEzBG,EAFyB,KAELC,EAFK,KAI1BC,EAAO,CAAC/B,EAASS,MAAOT,EAASY,MAJP,4CAMhC,4BAAAV,EAAA,sEAC+B8B,IAD/B,OACUC,EADV,OAEIL,EAASK,GAFb,4CANgC,sBAWhCC,qBAAU,YAXsB,mCAY5BC,KACD,IAEH,IAQMC,EAAcT,EAAMU,QAAO,SAAAC,GAAI,OAAIT,EAAmBU,SAASD,EAAKE,aAE1E,OACI,sBAAKjB,UAAU,gBAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,qBAAKkB,IAAKC,EAAeC,IAAI,2DAEjC,qBAAKpB,UAAU,wBAAf,SACKQ,EAAKa,KAAI,SAAA5B,GAAG,OACT,cAAC6B,EAAD,CAEI7B,IAAKA,EACLC,SAAUY,EAAmBU,SAASvB,GACtCE,QAAS,kBArBKsB,EAqB0BxB,OApBpDa,EAAmBU,SAASC,GAC5BV,EAAsBD,EAAmBQ,QAAO,SAAAS,GAAgB,OAAIA,IAAqBN,MAEzFV,EAAsB,GAAD,mBAAKD,GAAL,CAAyBW,MAJrB,IAACA,IAkBTxB,QAOjB,qBAAKO,UAAU,YAAf,SACKa,EAAYQ,KAAI,SAAAN,GAAI,OACjB,qBAAqBf,UAAU,OAA/B,UACI,qBAAKA,UAAU,YAAf,SAA4Be,EAAKS,QACjC,qBAAKxB,UAAU,kBAAf,SAAkCe,EAAKU,gBAFlCV,EAAKS,gBC7ClCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eae58d54.chunk.js","sourcesContent":["export enum Category {\n    Music = 'MUSIKKLEKER',\n    Quiz = 'QUIZ',\n}\n","export default __webpack_public_path__ + \"static/media/header-picture.8280a002.svg\";","import axios from 'axios';\nimport { Game } from '../landing-page/game-types';\n\nconst apiUrl = process.env.REACT_APP_LEIK_API_BASEURL;\n\nexport const fetchGames = async (): Promise<Game[]> => {\n    const fetchedAuctionObject = await axios.get<Game[]>(`${apiUrl}/`);\n\n    return fetchedAuctionObject.data;\n};\n","import { Category } from './category-tag-types';\n\ninterface CategoryTagTheme {\n    backgroundColor?: string;\n    color: string;\n    borderColor: string;\n}\n\nconst themeEntries: { [key in Category]: CategoryTagTheme } = {\n    [Category.Music]: {\n        color: '#EA332B',\n        borderColor: '#EA332B',\n    },\n    [Category.Quiz]: {\n        color: '#679ED1',\n        borderColor: '#679ED1',\n    },\n};\n\nconst selectedEntries: { [key in Category]: CategoryTagTheme } = {\n    [Category.Music]: {\n        color: '#FFF',\n        backgroundColor: '#EA332B',\n        borderColor: '#EA332B',\n    },\n    [Category.Quiz]: {\n        color: '#FFF',\n        backgroundColor: '#679ED1',\n        borderColor: '#679ED1',\n    },\n};\n\nexport const getThemeForTag = (tag: Category): CategoryTagTheme => themeEntries[tag];\nexport const getSelectedColorForTag = (tag: Category): CategoryTagTheme => selectedEntries[tag];\n","import React from 'react';\nimport { Category } from './category-tag-types';\nimport './category-tag.css';\nimport { getSelectedColorForTag, getThemeForTag } from './category-tag-theme';\n\ninterface Props {\n    tag: Category;\n    selected: boolean;\n    onClick: () => void;\n}\n\nconst Tag: React.FC<Props> = ({ tag, selected, onClick }) => {\n    const theme = getThemeForTag(tag);\n    const selectedTheme = getSelectedColorForTag(tag);\n\n    return (\n        <div\n            className=\"tag\"\n            style={{\n                ...theme,\n                backgroundColor: selected ? selectedTheme.backgroundColor : theme.backgroundColor,\n                color: selected ? selectedTheme.color : theme.color,\n            }}\n            onClick={onClick}\n        >\n            {tag}\n        </div>\n    );\n};\n\nexport default Tag;\n","import React, { useEffect, useState } from 'react';\nimport './landing.css';\nimport headerPicture from './images/header-picture.svg';\nimport * as LeikApi from '../api/leik-api';\nimport { Category } from './category-tag/category-tag-types';\nimport CategoryTag from './category-tag/CategoryTag';\nimport { Game } from './game-types';\n\nconst LandingPage: React.FC = () => {\n    const [games, setGames] = useState<Game[]>([]);\n    const [selectedCategories, setSelectedCategories] = useState<Category[]>([]);\n\n    const tags = [Category.Music, Category.Quiz];\n\n    async function fetchAllGames() {\n        const fetchedGames = await LeikApi.fetchGames();\n        setGames(fetchedGames);\n    }\n\n    useEffect(() => {\n        fetchAllGames();\n    }, []);\n\n    const updateSelectedCategories = (category: Category) => {\n        if (selectedCategories.includes(category)) {\n            setSelectedCategories(selectedCategories.filter(selectedCategory => selectedCategory !== category));\n        } else {\n            setSelectedCategories([...selectedCategories, category]);\n        }\n    };\n\n    const gamesToShow = games.filter(game => selectedCategories.includes(game.category));\n\n    return (\n        <div className=\"pageContainer\">\n            <div className=\"headerPictureContainer\">\n                <img src={headerPicture} alt=\"Sidetittel som bilde: Bare fordi det er gÃ¸y med..\" />\n            </div>\n            <div className=\"categoryTagsContainer\">\n                {tags.map(tag => (\n                    <CategoryTag\n                        key={tag}\n                        tag={tag}\n                        selected={selectedCategories.includes(tag)}\n                        onClick={() => updateSelectedCategories(tag)}\n                    />\n                ))}\n            </div>\n            <div className=\"gamesList\">\n                {gamesToShow.map(game => (\n                    <li key={game.title} className=\"game\">\n                        <div className=\"gameTitle\">{game.title}</div>\n                        <div className=\"gameDescription\">{game.description}</div>\n                    </li>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LandingPage from './landing-page/LandingPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LandingPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}